name: Pet Monitoring Backend Development CI Pipeline

on:
    workflow_call:
    workflow_dispatch:
    push:
       branches: [master]
    pull_request:
        branches: [master]

jobs:
  simple_build:
    runs-on: ubuntu-latest
    container: node:latest
#    services:
#      postgres:
#        image: postgres:latest
#        env:
#          POSTGRES_DB: PET
#          POSTGRES_PASSWORD: 123456
#          POSTGRES_PORT: 5432
#          POSTGRES_USER: test
#        ports:
#          - 5432:5432
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
    env:
        DJANGO_SECRET_KEY: "erqwer23"
        PYTHON_VERSION: "3.10.5"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

#      - name: Docker Compose Action
#      - uses: KengoTODA/actions-setup-docker-compose@v1.0.9
#        with:
#          version: '2.14.2' # the full version of `docker-compose` command


      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
           python-version: ${{ env.PYTHON_VERSION }}

      - name: Install pipenv
        run: pip install pipenv
      - name: Install Dependencies from pipenv
        run: |
            pipenv install

#      - name: Django Make Migration Checking
#        run: |
#            pipenv run python manage.py makemigrations
#      - name: Django Migrate Database to postgresql
#        run: |
#            pipenv run python manage.py migrate
#      - name: Create Elasticsearch Index
#        run: |
#            pipenv run python manage.py search_index --create
#
#
#      - name: Run Unit Tests
#        run: |
#            pipenv run python manage.py api/tests/models --pattern="*Test.py" --verbosity 2
#
#      - name: Run Integration Tests
#        run: |
#            pipenv run python manage.py test --pattern="*Test.py" --verbosity 2
#
#      - name: Run System Tests
#        run: |
#            pipenv run python manage.py test